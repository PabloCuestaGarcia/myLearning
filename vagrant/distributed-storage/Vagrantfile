# -*- mode: ruby -*-
# vi: set ft=ruby :

ENV['VAGRANT_NO_PARALLEL'] = 'yes'

MASTER_COUNT = 1
IMAGE = "bento/ubuntu-22.04"
BOX_VERSION = "v202206.13.0"
IP_MASTER = "192.168.56.10"
MEMORY_MASTER = 1024
CPUS_MASTER = 1

WORKER_COUNT = 2
IP_VOLUME = "192.168.56.2"
MEMORY_WORKER = 1024
CPUS_WORKER = 1

FILTER_COUNT = 1
IP_FILER = "192.168.56.30"
MEMORY_FILER = 1024
CPUS_FILER = 1

Vagrant.configure(2) do |config|

  config.vm.provision "shell", path: "bootstrap.sh"


  # Master Nodes
  (1..MASTER_COUNT).each do |i|

    config.vm.define "master#{i}" do |masternode|

      masternode.vm.box               = IMAGE
      masternode.vm.box_check_update  = false
      masternode.vm.hostname          = "master#{i}.example.com"

      masternode.vm.network "private_network", ip: IP_MASTER

      masternode.vm.provider :virtualbox do |v|
        v.name   = "master0#{i}"
        v.memory = MEMORY_MASTER
        v.cpus   = CPUS_MASTER
      end
    

    end

  end

  # FILER
  (1..FILTER_COUNT).each do |i|

    config.vm.define "filer#{i}" do |filernode|

      filernode.vm.box               = IMAGE
      filernode.vm.box_check_update  = false
      filernode.vm.hostname          = "filer#{i}.example.com"

      filernode.vm.network "private_network", ip: IP_FILER

      filernode.vm.provider :virtualbox do |v|
        v.name   = "filer0#{i}"
        v.memory = MEMORY_FILER
        v.cpus   = CPUS_FILER
      end
    

    end

  end

  # Volumes
  (1..WORKER_COUNT).each do |i|

    config.vm.define "volume#{i}" do |workernode|

      workernode.vm.box               = IMAGE
      workernode.vm.box_check_update  = false
      workernode.vm.hostname          = "worker#{i}.example.com"

      workernode.vm.network "private_network", ip: IP_VOLUME + "0#{i}"

      workernode.vm.provider :virtualbox do |v|
        v.name   = "volume#{i}"
        v.memory = MEMORY_WORKER
        v.cpus   = CPUS_WORKER
      end

    end

  end

end
